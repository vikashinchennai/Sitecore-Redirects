<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Interactive.Async.Providers</name>
    </assembly>
    <members>
        <member name="T:System.Linq.AsyncEnumerableExecutor`1">
            <summary>
            Provides functionality to evaluate an expression tree representation of a computation over asynchronous enumerable sequences.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
        </member>
        <member name="M:System.Linq.AsyncEnumerableExecutor`1.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new execution helper instance for the specified expression tree representing a computation over asynchronous enumerable sequences.
            </summary>
            <param name="expression">Expression tree representing a computation over asynchronous enumerable sequences.</param>
        </member>
        <member name="M:System.Linq.AsyncEnumerableExecutor`1.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Evaluated the expression tree.
            </summary>
            <param name="token">Token to cancel the evaluation.</param>
            <returns>Task representing the evaluation of the expression tree.</returns>
        </member>
        <member name="T:System.Linq.AsyncEnumerableQuery">
            <summary>
            Representation of an asynchronous enumerable sequence using an expression tree.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery.Enumerable">
            <summary>
            Gets the enumerable sequence obtained from evaluating the expression tree.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery.Expression">
            <summary>
            Gets the expression tree representing the asynchronous enumerable sequence.
            </summary>
        </member>
        <member name="T:System.Linq.AsyncEnumerableQuery`1">
            <summary>
            Representation of an asynchronous enumerable sequence using an expression tree.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new asynchronous enumerable sequence represented by the specified expression tree.
            </summary>
            <param name="expression">The expression tree representing the asynchronous enumerable sequence.</param>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.#ctor(System.Collections.Generic.IAsyncEnumerable{`0})">
            <summary>
            Creates a new asynchronous enumerable sequence by wrapping the specified sequence in an expression tree representation.
            </summary>
            <param name="enumerable">The asynchronous enumerable sequence to represent using an expression tree.</param>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery`1.System#Linq#IAsyncQueryable#ElementType">
            <summary>
            Gets the type of the elements in the sequence.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery`1.System#Linq#IAsyncQueryable#Expression">
            <summary>
            Gets the expression representing the sequence.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery`1.System#Linq#IAsyncQueryable#Provider">
            <summary>
            Gets the query provider used to execute the sequence.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery`1.Enumerable">
            <summary>
            Gets the enumerable sequence obtained from evaluating the expression tree.
            </summary>
        </member>
        <member name="P:System.Linq.AsyncEnumerableQuery`1.Expression">
            <summary>
            Gets the expression tree representing the asynchronous enumerable sequence.
            </summary>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.System#Linq#IAsyncQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new asynchronous enumerable sequence represented by an expression tree.
            </summary>
            <typeparam name="TElement">The type of the elements in the sequence.</typeparam>
            <param name="expression">The expression tree representing the asynchronous enumerable sequence.</param>
            <returns>Asynchronous enumerable sequence represented by the specified expression tree.</returns>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.System#Linq#IAsyncQueryProvider#ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes an expression tree representing a computation over asynchronous enumerable sequences.
            </summary>
            <typeparam name="TResult">The type of the result of evaluating the expression tree.</typeparam>
            <param name="expression">The expression tree to evaluate.</param>
            <param name="token">Cancellation token used to cancel the evaluation.</param>
            <returns>Task representing the result of evaluating the specified expression tree.</returns>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.GetEnumerator">
            <summary>
            Gets an enumerator to enumerate the elements in the sequence.
            </summary>
            <returns>A new enumerator instance used to enumerate the elements in the sequence.</returns>
        </member>
        <member name="M:System.Linq.AsyncEnumerableQuery`1.ToString">
            <summary>
            Gets a string representation of the enumerable sequence.
            </summary>
            <returns>String representation of the enumerable sequence.</returns>
        </member>
        <member name="T:System.Linq.AsyncEnumerableRewriter">
            <summary>
            Rewrites an expression tree representation using AsyncQueryable methods to the corresponding AsyncEnumerable equivalents.
            </summary>
        </member>
        <member name="T:System.Linq.AsyncQueryable">
            <summary>
            Provides a set of extension methods for asynchronous enumerable sequences represented using expression trees.
            </summary>
        </member>
        <member name="M:System.Linq.AsyncQueryable.AsAsyncQueryable``1(System.Collections.Generic.IAsyncEnumerable{``0})">
            <summary>
            Converts the specified asynchronous enumerable sequence to an expression representation.
            </summary>
            <typeparam name="TElement">The type of the elements in the sequence.</typeparam>
            <param name="source">The asynchronous enumerable sequence to represent using an expression tree.</param>
            <returns>An asynchronous enumerable sequence using an expression tree to represent the specified asynchronous enumerable sequence.</returns>
        </member>
        <member name="T:System.Linq.IAsyncQueryable">
            <summary>
            Asynchronous enumerable sequence represented by an expression tree.
            </summary>
        </member>
        <member name="P:System.Linq.IAsyncQueryable.ElementType">
            <summary>
            Gets the type of the elements in the sequence.
            </summary>
        </member>
        <member name="P:System.Linq.IAsyncQueryable.Expression">
            <summary>
            Gets the expression representing the sequence.
            </summary>
        </member>
        <member name="P:System.Linq.IAsyncQueryable.Provider">
            <summary>
            Gets the query provider used to execute the sequence.
            </summary>
        </member>
        <member name="T:System.Linq.IAsyncQueryable`1">
            <summary>
            Asynchronous enumerable sequence represented by an expression tree.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
        </member>
        <member name="T:System.Linq.IAsyncQueryProvider">
            <summary>
            Represents a query provider for asynchronous enumerable sequences.
            </summary>
        </member>
        <member name="M:System.Linq.IAsyncQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new asynchronous enumerable sequence represented by an expression tree.
            </summary>
            <typeparam name="TElement">The type of the elements in the sequence.</typeparam>
            <param name="expression">The expression tree representing the asynchronous enumerable sequence.</param>
            <returns>Asynchronous enumerable sequence represented by the specified expression tree.</returns>
        </member>
        <member name="M:System.Linq.IAsyncQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
            Executes an expression tree representing a computation over asynchronous enumerable sequences.
            </summary>
            <typeparam name="TResult">The type of the result of evaluating the expression tree.</typeparam>
            <param name="expression">The expression tree to evaluate.</param>
            <param name="token">Cancellation token used to cancel the evaluation.</param>
            <returns>Task representing the result of evaluating the specified expression tree.</returns>
        </member>
        <member name="T:System.Linq.IOrderedAsyncQueryable">
            <summary>
            Ordered asynchronous enumerable sequence represented by an expression tree.
            </summary>
        </member>
        <member name="T:System.Linq.IOrderedAsyncQueryable`1">
            <summary>
            Ordered asynchronous enumerable sequence represented by an expression tree.
            </summary>
            <typeparam name="T">The type of the elements in the sequence.</typeparam>
        </member>
    </members>
</doc>
